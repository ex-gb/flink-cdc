# Production Environment Configuration for Flink CDC to GCS
# =========================================================
# This file contains production-specific settings
# Use: --env production --config-file production.properties

# ==============================================
# ENVIRONMENT CONFIGURATION
# ==============================================
env=production
cloud.provider=gcp

# ==============================================
# DATABASE CONFIGURATION
# ==============================================
database.type=postgres

# PostgreSQL Configuration (Production)
postgres.hostname=${POSTGRES_HOST}
postgres.port=5432
postgres.database=cdc_source
postgres.username=cdc_user
postgres.password=${POSTGRES_PASSWORD}
postgres.schema-list=public
postgres.table-list=public.users,public.orders,public.transactions,public.products,public.inventory
postgres.slot-name=flink_cdc_slot_production
postgres.plugin-name=pgoutput
postgres.startup-mode=initial

# MySQL Configuration (Alternative for production)
mysql.hostname=${MYSQL_HOST}
mysql.port=3306
mysql.database=cdc_source
mysql.username=cdc_user
mysql.password=${MYSQL_PASSWORD}
mysql.schema-list=cdc_source
mysql.table-list=cdc_source.users,cdc_source.orders,cdc_source.transactions,cdc_source.products,cdc_source.inventory
mysql.server-id=5400-5410
mysql.server-time-zone=UTC
mysql.startup-mode=initial
mysql.incremental-snapshot-enabled=true

# ==============================================
# GCP CONFIGURATION
# ==============================================
gcp.project-id=${PROJECT_ID}
gcp.region=us-central1

# GCS Configuration
gcs.bucket-name=flink-cdc-data-${PROJECT_ID}
gcs.base-path=cdc-events
gcs.region=us-central1

# File Format Settings (Production - optimized for performance and cost)
gcs.file-format=avro
gcs.compression-type=snappy
gcs.max-file-size=256MB
gcs.rollover-interval=10min
gcs.partition-format='year='yyyy'/month='MM'/day='dd'/hour='HH'/minute='mm'
gcs.timezone=UTC

# ==============================================
# FLINK JOB CONFIGURATION (Production)
# ==============================================
flink.job-name=Production-CDC-to-GCS
flink.parallelism=4
flink.checkpoint-interval-ms=30000
flink.checkpoint-timeout-ms=900000
flink.min-pause-between-checkpoints-ms=5000
flink.max-concurrent-checkpoints=1
flink.enable-unaligned-checkpoints=true
flink.restart-strategy=exponential-delay
flink.restart-attempts=10
flink.restart-delay-ms=10000
flink.restart-max-delay-ms=300000

# State Backend Configuration (Production with HA)
flink.state-backend=rocksdb
flink.checkpoints-directory=gs://flink-cdc-config-${PROJECT_ID}/checkpoints/production
flink.savepoints-directory=gs://flink-cdc-config-${PROJECT_ID}/savepoints/production
flink.state-backend.incremental=true
flink.state-backend.local-recovery=true

# High Availability
flink.high-availability=zookeeper
flink.high-availability.storageDir=gs://flink-cdc-config-${PROJECT_ID}/ha-storage
flink.high-availability.zookeeper.quorum=${ZOOKEEPER_QUORUM}

# ==============================================
# MONITORING CONFIGURATION (Production)
# ==============================================
monitoring.enable-metrics=true
monitoring.metrics-reporter=prometheus
monitoring.enable-latency-tracking=true
monitoring.alerting-threshold-ms=60000

# ==============================================
# DEBEZIUM CONFIGURATION (Production)
# ==============================================
debezium.decimal-handling-mode=double
debezium.binary-handling-mode=base64
debezium.time-precision-mode=connect
debezium.include-schema-changes=false
debezium.slot-drop-on-stop=false
debezium.heartbeat-interval-ms=30000
debezium.max-batch-size=4096
debezium.max-queue-size=16384

# Performance Tuning
debezium.poll-interval-ms=100
debezium.max-queue-size-in-bytes=52428800
debezium.skip-messages-without-change=true
debezium.tombstones-on-delete=false 